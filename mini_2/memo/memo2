instance
클래스에는 변수와 상수를 정의하기도 하고 함수도 정의함
이 클래스를 가져다 사용하는 것이 instance 

클래스는 객체를 '추상화'
인스턴스는 '실체화'를 통해 객체의 예를 만든 것
하나의 클래스에서 여러개의 인스턴스를 가질 수 있음

객체 -> 클래스 -> 인스턴스
ex)
클래스 : 이름 / 직업 / 나이
-> 실체화 ->
인스턴스 : 김철수 / 회사원 / 30세

메서드
람다식(->) 사용
개개체 변수->메서드();

public
    - 외부에서 참조 가능
private
    -변수 선언한 클래스 안에서만 참조 가능
protected
    -변수 선언한 클래스와 상속 받은 클래스에서 참조 가능

$this 
    -$this->변수
    -메서드 내부의 멤버 변수에 접근

include_once
    -include_once("파일명.php")
    -클래스 읽어 들이기

method(메서드)
    -객체 변수->메서드();
    -메서드 실행

new
    -객체 변수 = new 클래스();
    -객체의 인스턴스를 생성

use
    -class 클래스명(){use 트레이드명1, 트레이드명2}
    -클래스에 트레이트 추가

Controller
Model과 View 간의 중개자 역할을 수행
사용자의 입력을 받아 View에서 이벤트가 발생하면, 해당 이벤트를 분석하고
이에 따라 Model을 업데이트하거나, View를 업데이트함

lib
웹 어플리케이션에서 필요한 여러 기능을 제공하면 모듈화된 코드 모음
라이브러리는 일반적으로 다른 코드에서 사용될 수 있는 특정한 기능을 포함
개발자는 필요한 기능을 라이브러리에서 가져와 사용 가능
개발자가 매번 코드를 작성하지 않아도 되도록, 자주 사용되는 기능들을 모듈화된 코드 모음으로 제공하는 것
이를 통해 개발자는 기능 구현에만 집중할 수 있으며, 생산성을 높일 수 있음

Model
애플리케이션의 데이터와 비지니스 로직을 관리
데이터베이스나 파일, API 등과 같은 데이터 소스에서 데이터를 가져오고
해당 데이터를 가공하거나 연산을 수행함
*비지니스 로직 :
어떤 비지니스 프로세스나 문제를 해결하기 위한 규칙이나 규칙 세트를 의미
간단히 어떤 일을 수행하는데 필요한 규칙이나 조건들
일반적으로 데이터베이스나 파일 등의 데이터 저장소에서 데이터를 가져오고
이를 처리하여 결과를 반환하는 과정에서 적용됨

Util
웹 어플리케이션에서 자주 사용되는 간단한 함수나 클래스를 포함
이러한 함수나 클래스는 특정한 기능을 수행하거나
전체 어플리케이션에서 공통적으로 사용될 수 있는 유틸리티 기능을 제공함
ex) 문자열 처리, 날짜 처리, 파일 처리 등의 유틸리티 기능

View
View는 애플리케이션의 사용자 인터페이스(UI)를 담당
사용자가 애플리케이션과 상호작용할 때, View는 해당 동작을 감지하고, 이를 Controller로 전달함
